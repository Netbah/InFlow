{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/TaskDataSource.ts","webpack:///./src/app/api.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/task-create/task-create.component.css","webpack:///./src/app/task-create/task-create.component.html","webpack:///./src/app/task-create/task-create.component.ts","webpack:///./src/app/task-detail/task-detail.component.css","webpack:///./src/app/task-detail/task-detail.component.html","webpack:///./src/app/task-detail/task-detail.component.ts","webpack:///./src/app/task-edit/task-edit.component.css","webpack:///./src/app/task-edit/task-edit.component.html","webpack:///./src/app/task-edit/task-edit.component.ts","webpack:///./src/app/task/task.component.css","webpack:///./src/app/task/task.component.html","webpack:///./src/app/task/task.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { DataSource } from '@angular/cdk/table';\nimport { ApiService } from './api.service';\n\nexport class TaskDataSource extends DataSource<any> {\n  constructor(private api: ApiService) {\n    super();\n  }\n\n  connect() {\n    return this.api.getTasks();\n  }\n\n  disconnect() {}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of, throwError } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { catchError, tap, map } from 'rxjs/operators';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\nconst apiUrl = '/api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  constructor(private http: HttpClient) {}\n\n  getTasks(): Observable<any> {\n    return this.http.get(apiUrl, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError)\n    );\n  }\n\n  getTask(id: string): Observable<any> {\n    const url = `${apiUrl}/${id}`;\n    return this.http.get(url, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError)\n    );\n  }\n\n  postTask(data): Observable<any> {\n    return this.http.post(apiUrl, data, httpOptions).pipe(catchError(this.handleError));\n  }\n\n  updateTask(id: string, data): Observable<any> {\n    const url = `${apiUrl}/${id}`;\n    return this.http.put(url, data, httpOptions).pipe(catchError(this.handleError));\n  }\n\n  deleteTask(id: string): Observable<{}> {\n    const url = `${apiUrl}/${id}`;\n    return this.http.delete(url, httpOptions).pipe(catchError(this.handleError));\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(`Backend returned code ${error.status}, ` + `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError('Something bad happened; please try again later.');\n  }\n\n  private extractData(res: Response) {\n    const body = res;\n    return body || {};\n  }\n}\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'InFlow';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { TaskComponent } from './task/task.component';\nimport { TaskDetailComponent } from './task-detail/task-detail.component';\nimport { TaskCreateComponent } from './task-create/task-create.component';\nimport { TaskEditComponent } from './task-edit/task-edit.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport {\n  MatInputModule,\n  MatPaginatorModule,\n  MatProgressSpinnerModule,\n  MatSortModule,\n  MatTableModule,\n  MatIconModule,\n  MatButtonModule,\n  MatCardModule,\n  MatFormFieldModule\n} from '@angular/material';\n\nconst appRoutes: Routes = [\n  {\n    path: 'tasks',\n    component: TaskComponent,\n    data: { title: 'Task List' }\n  },\n  {\n    path: 'task-details/:id',\n    component: TaskDetailComponent,\n    data: { title: 'Task Details' }\n  },\n  {\n    path: 'task-create',\n    component: TaskCreateComponent,\n    data: { title: 'Create Task' }\n  },\n  {\n    path: 'task-edit/:id',\n    component: TaskEditComponent,\n    data: { title: 'Edit Task' }\n  },\n  {\n    path: '',\n    redirectTo: '/tasks',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TaskComponent,\n    TaskDetailComponent,\n    TaskCreateComponent,\n    TaskEditComponent\n  ],\n  imports: [\n    RouterModule.forRoot(appRoutes),\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatProgressSpinnerModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","module.exports = \".example-form {\\n    min-width: 150px;\\n    max-width: 500px;\\n    width: 100%;\\n  }\\n  \\n  .example-full-width {\\n    width: 100%;\\n  }\\n  \\n  .example-full-width:nth-last-child() {\\n    margin-bottom: 10px;\\n  }\\n  \\n  .button-row {\\n    margin: 10px 0;\\n  }\\n  \"","module.exports = \"<div class=\\\"button-row\\\">\\n  <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/tasks']\\\">\\n    <mat-icon>list</mat-icon>\\n  </a>\\n</div>\\n<form [formGroup]=\\\"taskForm\\\" (ngSubmit)=\\\"onFormSubmit(taskForm.value)\\\">\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Title\\\" formControlName=\\\"title\\\" [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!taskForm.get('title').valid && taskForm.get('title').touched\\\">Please enter Task Title</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Author\\\" formControlName=\\\"author\\\" [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!taskForm.get('author').valid && taskForm.get('author').touched\\\">Please enter Task Author</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <textarea matInput placeholder=\\\"Description\\\" formControlName=\\\"description\\\" [errorStateMatcher]=\\\"matcher\\\"></textarea>\\n    <mat-error>\\n      <span *ngIf=\\\"!taskForm.get('description').valid && taskForm.get('description').touched\\\">Please enter Task\\n        Description</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <div class=\\\"button-row\\\">\\n    <button type=\\\"submit\\\" [disabled]=\\\"!taskForm.valid\\\" mat-raised-button color=\\\"primary\\\">\\n      <mat-icon>save</mat-icon>\\n    </button>\\n  </div>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ApiService } from '../api.service';\nimport {\n  FormControl,\n  FormGroupDirective,\n  FormBuilder,\n  FormGroup,\n  NgForm,\n  Validators\n} from '@angular/forms';\n\n@Component({\n  selector: 'app-task-create',\n  templateUrl: './task-create.component.html',\n  styleUrls: ['./task-create.component.css']\n})\nexport class TaskCreateComponent implements OnInit {\n  taskForm: FormGroup;\n  title = '';\n  description = '';\n  author = '';\n  constructor(private router: Router, private api: ApiService, private formBuilder: FormBuilder) {}\n\n  ngOnInit() {\n    this.taskForm = this.formBuilder.group({\n      title: [null, Validators.required],\n      description: [null, Validators.required],\n      author: [null, Validators.required]\n    });\n  }\n\n  onFormSubmit(form: NgForm) {\n    this.api.postTask(form).subscribe(\n      res => {\n        const id = res['_id'];\n        this.router.navigate(['/task-details', id]);\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n}\n","module.exports = \".example-card {\\n    max-width: 500px;\\n  }\\n  \\n  .button-row {\\n    margin: 10px 0;\\n  }\"","module.exports = \"<div class=\\\"button-row\\\">\\n  <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/tasks']\\\">\\n    <mat-icon>list</mat-icon>\\n  </a>\\n</div>\\n<mat-card class=\\\"example-card\\\">\\n  <mat-card-header>\\n    <mat-card-title>\\n      <h2>{{task.title}}</h2>\\n    </mat-card-title>\\n    <mat-card-subtitle>{{task.description}}</mat-card-subtitle>\\n  </mat-card-header>\\n  <mat-card-content>\\n    <dl>\\n      <dt>Author:</dt>\\n      <dd>{{task.author}}</dd>\\n      <dt>Update Date:</dt>\\n      <dd>{{task.updated_date | date}}</dd>\\n    </dl>\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/task-edit', task._id]\\\">\\n      <mat-icon>edit</mat-icon>\\n    </a>\\n    <a mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteTask(task._id)\\\">\\n      <mat-icon>delete</mat-icon>\\n    </a>\\n  </mat-card-actions>\\n</mat-card>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ApiService } from '../api.service';\n\n@Component({\n  selector: 'app-task-detail',\n  templateUrl: './task-detail.component.html',\n  styleUrls: ['./task-detail.component.css']\n})\nexport class TaskDetailComponent implements OnInit {\n  task = {};\n  constructor(private route: ActivatedRoute, private api: ApiService, private router: Router) {}\n\n  ngOnInit() {\n    this.getTaskDetails(this.route.snapshot.params['id']);\n  }\n\n  getTaskDetails(id) {\n    this.api.getTask(id).subscribe(data => {\n      console.log(data);\n      this.task = data;\n    });\n  }\n\n  deleteTask(id) {\n    this.api.deleteTask(id).subscribe(\n      res => {\n        this.router.navigate(['/tasks']);\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n}\n","module.exports = \".example-form {\\n    min-width: 150px;\\n    max-width: 500px;\\n    width: 100%;\\n  }\\n  \\n  .example-full-width {\\n    width: 100%;\\n  }\\n  \\n  .example-full-width:nth-last-child() {\\n    margin-bottom: 10px;\\n  }\\n  \\n  .button-row {\\n    margin: 10px 0;\\n  }\"","module.exports = \"<div class=\\\"button-row\\\">\\n  <a mat-raised-button color=\\\"primary\\\" (click)=\\\"taskDetails()\\\">\\n    <mat-icon>show</mat-icon>\\n  </a>\\n</div>\\n<form [formGroup]=\\\"taskForm\\\" (ngSubmit)=\\\"onFormSubmit(taskForm.value)\\\">\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Title\\\" formControlName=\\\"title\\\" [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!taskForm.get('title').valid && taskForm.get('title').touched\\\">Please enter Task Title</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Author\\\" formControlName=\\\"author\\\" [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!taskForm.get('author').valid && taskForm.get('author').touched\\\">Please enter Task Author</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <textarea matInput placeholder=\\\"Description\\\" formControlName=\\\"description\\\" [errorStateMatcher]=\\\"matcher\\\"></textarea>\\n    <mat-error>\\n      <span *ngIf=\\\"!taskForm.get('description').valid && taskForm.get('description').touched\\\">Please enter Task\\n        Description</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <div class=\\\"button-row\\\">\\n    <button type=\\\"submit\\\" [disabled]=\\\"!taskForm.valid\\\" mat-raised-button color=\\\"primary\\\">\\n      <mat-icon>save</mat-icon>\\n    </button>\\n  </div>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ApiService } from '../api.service';\nimport {\n  FormControl,\n  FormGroupDirective,\n  FormBuilder,\n  FormGroup,\n  NgForm,\n  Validators\n} from '@angular/forms';\n\n@Component({\n  selector: 'app-task-edit',\n  templateUrl: './task-edit.component.html',\n  styleUrls: ['./task-edit.component.css']\n})\nexport class TaskEditComponent implements OnInit {\n  taskForm: FormGroup;\n  id = '';\n  title = '';\n  description = '';\n  author = '';\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private api: ApiService,\n    private formBuilder: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    this.getTask(this.route.snapshot.params['id']);\n    this.taskForm = this.formBuilder.group({\n      title: [null, Validators.required],\n      description: [null, Validators.required],\n      author: [null, Validators.required]\n    });\n  }\n  getTask(id) {\n    this.api.getTask(id).subscribe(data => {\n      this.id = data._id;\n      this.taskForm.setValue({\n        title: data.title,\n        description: data.description,\n        author: data.author\n      });\n    });\n  }\n\n  onFormSubmit(form: NgForm) {\n    this.api.updateTask(this.id, form).subscribe(\n      res => {\n        const id = res['_id'];\n        this.router.navigate(['/task-details', id]);\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  taskDetails() {\n    this.router.navigate(['/task-details', this.id]);\n  }\n}\n","module.exports = \".example-container {\\n    display: flex;\\n    flex-direction: column;\\n    max-height: 500px;\\n    min-width: 300px;\\n    overflow: auto;\\n  }\\n  \\n  .button-row {\\n    margin: 10px 0;\\n  }\"","module.exports = \"<div class=\\\"button-row\\\">\\n  <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/task-create']\\\">\\n    <mat-icon>add</mat-icon>\\n  </a>\\n</div>\\n<div class=\\\"example-container mat-elevation-z8\\\">\\n  <table mat-table #table [dataSource]=\\\"dataSource\\\">\\n\\n    <!--- Note that these columns can be defined in any order.\\n          The actual rendered columns are set as a property on the row definition\\\" -->\\n\\n    <!-- Title Column -->\\n    <ng-container matColumnDef=\\\"title\\\">\\n      <th mat-header-cell *matHeaderCellDef> Title </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.title}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"description\\\">\\n      <th mat-header-cell *matHeaderCellDef> Description </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.description}} </td>\\n    </ng-container>\\n\\n    <!-- Author Column -->\\n    <ng-container matColumnDef=\\\"author\\\">\\n      <th mat-header-cell *matHeaderCellDef> Author </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.author}} </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [routerLink]=\\\"['/task-details/', row._id]\\\"></tr>\\n  </table>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { TaskDataSource } from '../TaskDataSource';\n\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.css']\n})\nexport class TaskComponent implements OnInit {\n  tasks: any;\n  displayedColumns = ['title', 'description', 'author'];\n  dataSource = new TaskDataSource(this.api);\n  constructor(private api: ApiService) {}\n\n  ngOnInit() {\n    this.api.getTasks().subscribe(\n      res => {\n        console.log(res);\n        this.tasks = res;\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}